// Author: rifleman17
// Скрипты для квестовой цепочки на поддержку Линетт. ГУ.
#include "_macros.fos"
#include "_colors.fos"
#include "_teams.fos"

// Наемный убийца, преследующий игрока, если тот отказался поддержать Линетт.
#define STR_KILLER_DEAD     (7100) // Вот сука черномазая, говорила – легкая мишень… 
#define STR_KILLER_KILL     (7101) // Ха, как эта черная сука и обещала – раз плюнуть… 

import void _SniperDead (Critter& cr, Critter@ killer) from "pattern_sniper";
import void SetSniperStats(Critter & cr, uint8 lvl) from "pattern_sniper";
import void _SniperInit(Critter & cr, bool firstTime) from "pattern_sniper"; 

void _KillerInit(Critter& cr, bool firstTime)
{
	_SniperInit(cr, firstTime);
	if(firstTime)
	{
		cr.AddItem(PID_SNIPER_RIFLE, 1);
		cr.AddItem(PID_COMBAT_ARMOR, 1);
		cr.AddItem(PID_SUPER_STIMPAK, Random(1,2));
		cr.AddItem(PID_223_FMJ, Random(30,50));
	}
	cr.StatBase[ST_DIALOG_ID] = DIALOG_vc_killer;
	cr.StatBase[ST_REPLICATION_TIME] = -1;
	cr.StatBase[ST_TEAM_ID] = TEAM_Slaver; // Чтобы не было конфликта с наемниками, если они вдруг есть у игрока в команде
	SetSniperStats(cr, 0);
	cr.SetEvent(CRITTER_EVENT_DEAD, "_KillerDead");
	cr.SetEvent(CRITTER_EVENT_SMTH_DEAD, "_KillerSmthDead");
}

void _KillerDead(Critter& cr, Critter@ killer)
{
	_SniperDead(cr, killer);
	Map@ map = cr.GetMap();
	if(valid(map))
		map.SetTextMsg(cr.HexX, cr.HexY, COLOR_BLUE, TEXTMSG_TEXT, STR_KILLER_DEAD);	
}

void _KillerSmthDead(Critter& cr, Critter& fromCr, Critter@ killer)
{
	if(valid(killer) && killer.Id == cr.Id)
	{
		GameVar@ v = GetLocalVar(LVAR_vc_lynett_refuse, fromCr.Id);
		if(valid(v) && v.GetValue() > 0)
			cr.SayMsg(SAY_NORM, TEXTMSG_TEXT, STR_KILLER_KILL);
	}
}

// Арест
// Для нпц, которые могут быть подвергнуты аресту, необходимо установить спец роль в маппере, а также 
// внести номер диалога в массив prisonerDialogs. Соответствующие реплики добавить в диалог вручную
#define ROLE_PRISONER               (1701)
#define FORCE_DIALOG_FOUND_PRISONER (23) // Найден заключенный, можно давать квест
#define FORCE_DIALOG_NOT_FOUND      (46) // Не найден заключенный, нельзя давать квест
#define NPC_NAME #(dialogId)   		((dialogId)*1000+100)// поиск имени НПЦ в файле FODLG.msg
#define HEX_FIRST                   (164)
#define HEX_LAST                    (167)// Игрок должен находиться внутри многоугольника, ограниченного этими гексами
#define HEX_PRISON                  (168)// Место заключения
#define STR_ARESTHIM                (2)  // Пакуйте товарища!
#define STR_PRISONER_SHOUT          (1)  // Вы не имеете права!@@Я буду жаловаться!@@Это произвол!@@Ты! Ты поплатишься за это!@@Я выйду отсюда через полчаса, вы все заплатите!


uint[] prisonerDialogs = {DIALOG_vc_kohl, DIALOG_vc_randal, DIALOG_vc_ed};

import bool IsMerc(Critter& merc) from "merc";
import bool IsCritterInDeadZone(Critter & cr, Map & map, uint8 dir, uint8 hexFirst, uint8 hexEnd) from "entire";
import Critter@ GetMaster(Critter& merc) from "merc";
import void CancelMerc(Critter & merc) from "merc";
import void FlushScreen(Critter& cr, bool fadeOut, uint timeMs) from "effects";

Critter@ GetPrisoner(Location& loc, uint dialog)
{
	Critter@[] critters;
	Map@ map;
	Critter@ cr;
	for(uint i = 0, l = loc.GetMapCount(); i < l; i++)
	{
		@map = loc.GetMapByIndex(i);
		if(valid(map))
		{
			for(uint j = 0, k = map.GetNpcCount(ROLE_PRISONER, FIND_LIFE|FIND_ONLY_NPC); j < k; j++)
			{
				@cr = map.GetNpc(ROLE_PRISONER, FIND_LIFE|FIND_ONLY_NPC, j);
				if(valid(cr) && cr.Stat[ST_DIALOG_ID] == int(dialog) && !IsMerc(cr))
					return cr; // Если нпц является чьим-то мерком уже, его засадить в тюрьму не получится
			}
		}
	}
	return null;
}

uint r_TrySelectPrisoner(Critter& player, Critter@ npc)
{
	Map@ map = player.GetMap();
	if(!valid(map))
		return FORCE_DIALOG_NOT_FOUND;
	Location@ loc = map.GetLocation();
	if(!valid(loc))
		return FORCE_DIALOG_NOT_FOUND;
	GameVar@ crId = GetLocalVar(LVAR_vc_lynett_prisoner_id, player.Id);
	if(!valid(crId))
		return FORCE_DIALOG_NOT_FOUND;
	crId = 0;
	Critter@ cr;
	int tries = 10;
	while (tries > 0 and !valid(cr) && prisonerDialogs.length() > 0)
	{
		@cr = GetPrisoner(loc, prisonerDialogs[Random(0, prisonerDialogs.length()-1)]);
		tries--;
	}
	if(valid(cr))
	{
		crId = cr.Id;
		return FORCE_DIALOG_FOUND_PRISONER;
	}
	return FORCE_DIALOG_NOT_FOUND;
}

// @lex name@ - имя искомого заключенного
void dlg_PrisonerName(Critter& player, Critter@ npc, string@ lexems)
{
	if(!IS_DIALOG_GENERATED(lexems)) 
		return;
	lexems = "$nameИзбранный";
	GameVar@ crId = GetLocalVar(LVAR_vc_lynett_prisoner_id, player.Id);
	if(!valid(crId) || crId == 0)
		return;
	Critter@ prisoner = GetCritter(crId.GetValue());
	if(!valid(prisoner))
		return;
	lexems = "$name@msg DLG " + NPC_NAME(prisoner.Stat[ST_DIALOG_ID]) + "@";
	prisoner.SetEvent(CRITTER_EVENT_TALK, "_PrisonerTalk");
}

 bool _PrisonerTalk(Critter& cr, Critter& player, bool attach, uint talkCount)
 {
	GameVar@ f = GetUnicumVar(UVAR_npc_story, player.Id, cr.Id);
	if(!valid(f))
		return true;
	// для контроля запуска нужного диалога используется переменная npc_story
	// поскольку нпц в любом случае нужен для скриптов в диалоге, а если не проверять запуск второго диалога, он тоже будет отменен
	if(attach)
	{
		GameVar@ crId = GetLocalVar(LVAR_vc_lynett_prisoner_id, player.Id);
		if(valid(cr) && crId == cr.Id)
		{
			if(f == 0)
				f = 1;
			else
				return true; // Второй вызов диалога, уже нужного
			
			player.Say(SAY_NETMSG, "DEBUG: подмена диалога...");
			RunDialog(player, cr, DIALOG_vc_telman, false);
			cr.MercBase[MERC_CANCEL_ON_GLOBAL] = 1;
			return false;
		}
	}else{
		if(f == 1)
			f = 0;
	}
	return true;
 }
 
 // Переключение статуса квеста происходит при наступании НПЦ на спецтриггер, если игрок тоже находится в здании
void t_Arest(Critter& cr, Scenery& trigger, bool entered, uint8 dir)
{
	if(cr.IsNpc() && IsMerc(cr) && !entered)
	{
		Critter@ player = GetMaster(cr);
		if(!valid(player))
			return;
		GameVar@ crId = GetLocalVar(LVAR_vc_lynett_prisoner_id, player.Id);
		GameVar@ qVar = GetLocalVar(LVAR_q_vc_lynett_arest, player.Id);
		if(!valid(crId) || !valid(qVar))
			return;
		if(cr.Id == uint(crId.GetValue()) && qVar.GetValue() == 3 && IsCritterInDeadZone(player, cr.GetMap(), 0, HEX_FIRST, HEX_LAST))
		{
			player.Wait(0);
			cr.DropPlanes();
			cr.Wait(0);
			player.SayMsg(SAY_NORM, TEXTMSG_DLG, DLGSTR(DIALOG_vc_telman, STR_ARESTHIM));
			FlushScreen(player, false, 2000);
			qVar = 4;
			CancelMerc(cr);	
			cr.TransitToMap(cr.GetMap().Id, HEX_PRISON);
			cr.SayMsg(SAY_SHOUT, TEXTMSG_DLG, DLGSTR(DIALOG_vc_telman, STR_PRISONER_SHOUT));
		}
	} 
}